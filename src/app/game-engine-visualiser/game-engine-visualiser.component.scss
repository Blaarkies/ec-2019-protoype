@import '../../styles';

$theme-blue: rgb(0, 176, 240);
$theme-orange: rgb(244, 145, 0);
$theme-panel-backing: rgba(0, 0, 0, 0.67);

$light-green: #47ff3fff;
$dark-green: #222d29;
$move-animations-delay: 750ms;
$banana-throw-air-time: 750ms;

.background {
  z-index: -9;
  width: 100%;
  height: 100%;
  position: absolute;
  background-color: black;

  div {
    width: 100%;
    height: 100%;
    filter: blur(6px) brightness(0.3);
    background-size: cover;
    background-repeat: no-repeat;

    background-image: url('../../assets/background-2.jpg');
    //animation: animateChangeBackground 270s infinite alternate;
  }
}

@keyframes animateChangeBackground {
  0% {
    background-image: url('../../assets/background-1.jpg');
  }
  50% {
    background-image: url('../../assets/background-2.jpg');
  }
  100% {
    background-image: url('../../assets/background-3.jpg');
  }
}

.screen-container {
  padding: 16px;

  display: grid;
  grid-template-columns: max-content auto;
  grid-gap: 16px;

  overflow: hidden;
}

.orange-font {
  color: $theme-orange;
  font-family: sans-serif;
  font-size: 18px;
}

.blue-font {
  color: $theme-blue;
  font-family: sans-serif;
  font-size: 18px;
}

@mixin generate-grid-areas($elements...) {
  @each $c in $elements {
    .#{$c} {
      grid-area: $c;
    }
  }
}

._blue-panel {
  background-color: $theme-panel-backing;
  border: $theme-blue 3px solid;
  border-radius: 32px;
  padding: 32px;
}

.dashboard-container {
  display: grid;
  grid-template-rows: max-content max-content auto;
  grid-gap: 32px;

  @extend ._blue-panel;

  .dashboard-details {
    @extend .blue-font;

    display: grid;
    grid-gap: 4px 8px;
    grid-template-columns: max-content 40px max-content 60px max-content;
    grid-template-rows: repeat(3, max-content);
    // @formatter:off
    grid-template-areas:
  'player  player    player   player    portraits'
  'worms   worms-v   score    score-v   portraits'
  'selects selects-v bananas  bananas-v portraits'
  'errors  errors-v  errors-v errors-v  portraits';
    // @formatter:on
    @include generate-grid-areas(player, portraits, worms, worms-v, score, score-v, selects, selects-v, bananas, bananas-v, errors);

    .player {
      font-size: 32px;
      font-weight: bold;
    }

    .portraits {
      display: grid;
      grid-gap: 16px;

      .portrait-detail {
        width: 100%;
        display: grid;
        grid-template-columns: max-content max-content max-content;
        grid-gap: 4px;

        // @formatter:off
        grid-template-areas:
      'image worm-id    worm-id-v'
      'image health     health-v'
      'image profession profession-v';
        // @formatter:on
        @include generate-grid-areas(image, worm-id, worm-id-v, health, health-v, profession, profession-v);

        .image {
          grid-area: image;
          filter: drop-shadow(0 0 8px #fff7);

          padding: 0 8px;
          border-left: 6px solid transparent;

          &.is-selected-worm {
            border-left: 6px solid $light-green;
          }
        }
      }
    }
  }

  .cheats {
    @extend .blue-font;
  }
}

.disable-clicks {
  pointer-events: none;
}

.map-container {
  user-select: none;
  width: max-content;
  background-color: #242424;
  border-radius: 20%;

  display: grid;
  place-content: center;
}

.square {
  height: 100%;
  width: 100%;

  display: grid;
  place-content: center;
  color: #F5F5F5;
  position: relative;
}

._command-overlay {
  position: absolute;
  width: 50%;
  height: 50%;
  place-self: center;

  animation: opacity-0-to-1 750ms forwards;
}

.self-commands {
  @extend ._command-overlay;
  border: 5px solid;
  border-image-slice: 1;
  border-image-outset: 0;
  border-image-source: radial-gradient(transparent 80%, $theme-blue 92%);
  filter: drop-shadow(0px 0px 6px blue);
  width: 100%;
  height: 100%;
}

.basic-commands {
  @extend ._command-overlay;
  background-color: #9007;
  transform: rotate(45deg);
  filter: drop-shadow(0px 0px 6px red);
  border: 1px solid #0009;
}

.banana-command {
  @extend ._command-overlay;
  background-color: #ff05;
  border-radius: 50%;
  filter: drop-shadow(0px 0px 6px yellow);
  border: 1px solid #0009;
}

.action-icon {
  font-size: 40px;
  height: 40px;
  margin-top: -16px;
  text-shadow: 0 0 16px white;
}

::ng-deep {
  .mat-menu-panel {
    background-color: $theme-panel-backing;
    border: $theme-blue 3px solid;
    border-radius: 16px !important;

    min-width: unset !important;

    button {
      height: 60px;
      transition: 300ms ease-in-out;

      &:hover {
        background-color: transparentize($theme-orange, 0.6) !important;
      }
    }
  }
}

.overlap-container {
  display: grid;
  grid-template-areas: 'overlap';

  .overlap {
    grid-area: overlap;
  }
}

.hover-action-clickable {
  cursor: pointer;
  transition: filter 500ms;

  &:hover {
    filter: brightness(1.35);
  }
}

.powerup {
  pointer-events: none;
  justify-self: center;
}

.on-turn {
  animation: animate-jump 2000ms infinite;
  animation-delay: $move-animations-delay;
}

._selector-corners-default {
  pointer-events: none;
  place-self: center;
  width: 100%;
  height: 100%;
  border: 5px solid;
  border-image-slice: 1;
  border-image-outset: 1;
  border-image-source: radial-gradient(transparent 80%, $light-green 92%);
  animation: corner-selector-scale 1700ms ease-in-out infinite alternate;
}

.selector-corners-shadow {
  @extend ._selector-corners-default;
  filter: blur(6px);
}

.selector-corners-real {
  @extend ._selector-corners-default;
  animation: corner-selector-scale 1700ms ease-in-out infinite alternate,
  opacity-0-to-1 1700ms cubic-bezier(0.16, 0.01, 0.22, 1.01) infinite alternate;
}

@keyframes corner-selector-scale {
  from {
    transform: scale(1);
  }
  to {
    transform: scale(1.2);
  }
}

@keyframes opacity-0-to-1 {
  from {
    opacity: 0
  }
  to {
    opacity: 1
  }
}

@keyframes rotate-0-to-360 {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(359.99deg);
  }
}

@keyframes animate-jump {
  0% {
    transform: translateY(0px) scale(1);
  }
  7% {
    transform: translateY(-7px) scale(1.1)
  }
  14% {
    transform: translateY(0px) scale(1)
  }
}

.worm-icon-container {
  pointer-events: none;
  display: grid;

  .worm-icon {
    height: 75%;
    place-self: center;
  }

  transition: transform $move-animations-delay cubic-bezier(0.79, 1.01, 0.26, 0.02);
}

.texture {
  pointer-events: none;
  border: 0.5px solid dimgray;
  border-radius: 16%;
  transition: background-image 1400ms cubic-bezier(0.42, 0, 1, 0.25);
}

//SurfaceTypeEnum
.DEEP_SPACE {
  background-image: url('../../assets/texture_space.png');
  background-size: cover;
  background-color: #050405;
}

.DIRT {
  background-image: url('../../assets/texture_asteroid.png');
  background-size: cover;
  background-color: #919191;
}

.AIR {
  background-image: url('../../assets/texture_rock.png');
  background-size: cover;
  background-color: #2f2f2f;
}

$versions-count: 3;
@mixin _texture-styles-classes {
  @for $i from 0 through $versions-count {
    .DEEP_SPACE#{$i} {
      @extend .DEEP_SPACE;
      transform: rotate(#{$i*90}deg);
    }
    .DIRT#{$i} {
      @extend .DIRT;
      transform: rotate(#{$i*90}deg);
    }
    .AIR#{$i} {
      @extend .AIR;
      transform: rotate(#{$i*90}deg);
    }
  }
}

@include _texture-styles-classes;

.explosion {
  pointer-events: none;
  background-size: cover;
  height: 100%;
  animation: background-image-unset-to-empty both;
  animation-delay: $banana-throw-air-time;
}

@keyframes background-image-unset-to-empty {
  from {
    background-image: unset
  }
  to {
  }
}

.laser {
  background: linear-gradient(transparent 40%, red, transparent 60%);
  height: 100%;
  animation: opacity-0-to-1 300ms alternate 2 cubic-bezier(0, 1, 0.7, 1);
  opacity: 0;
}

.banana {
  height: 100%;
  transition: transform $banana-throw-air-time cubic-bezier(0, 0.25, 1, 0.75);

  .icon {
    animation: rotate-0-to-360 both infinite 500ms cubic-bezier(0.36, 0.12, 0.14, 0.78);
  }
}

.remove-banana-animation {
  animation: opacity-0-to-1 both reverse 200ms $banana-throw-air-time;
}
