@import '../../styles';

.screen-container {
  padding: 8px;

  display: grid;
  grid-template-columns: auto auto;
  grid-gap: 8px;

  overflow: hidden;
}

.player-details-container {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(100px, 1fr));
  grid-gap: 4px;
}

.map-container {
  width: max-content;
  background-color: #242424;
  border-radius: 20%;

  display: grid;
  grid-template-rows: repeat(13, 70px); // Total rows/cols must fit the map config(x/y) settings
  grid-template-columns: repeat(13, 70px);

  place-content: center;
}

.square {
  border: 0.5px solid dimgray;
  border-radius: 16%;

  height: 100%;
  width: 100%;

  display: grid;
  place-content: center;

  color: #F5F5F5;

  position: relative;
}

._command-overlay {
  position: absolute;
  width: 50%;
  height: 50%;
  place-self: center;

  animation: transparentToVisible 750ms forwards;
}

@keyframes transparentToVisible {
  from {
    opacity: 0
  }
  to {
    opacity: 1
  }
}

.basic-commands {
  @extend ._command-overlay;
  background-color: transparentize(red, 0.6);
  transform: rotate(45deg);
}

.banana-command {
  @extend ._command-overlay;
  background-color: transparentize(yellow, 0.6);
  border-radius: 50%;
}

.action-icon {
  font-size: 40px;
  height: 40px;
}

::ng-deep {
  .mat-menu-panel {
    min-width: unset !important;

    button {
      height: 60px;
    }
  }
}

.overlap-container {
  display: grid;
  grid-template-areas: 'overlap';

  .overlap {
    grid-area: overlap;
  }
}

.hover-action-clickable {
  cursor: pointer;
  transition: filter 500ms;

  &:hover {
    filter: brightness(1.35);
  }
}

.occupant {
  display: grid;
  place-items: center;

  img {
    width: 75%;
  }
}

.powerup {
  background-color: maroon;
  border-radius: 50%;

  color: white;
  place-self: center;
  display: grid;

  border: ridge 4px white;
  width: 80%;
  height: 80%;

  mat-icon {
    font-size: 55px;
  }
}

.on-turn {
  img {
    animation: animateJump 2000ms infinite;
  }

  .flashing-x {
    width: 100%;
    height: 100%;

    $light-green: #47ff3f;
    $dark-green: #222d29;
    background:
      linear-gradient(45deg, transparent 40%, $dark-green 49%, $light-green 50%, $dark-green 51%, transparent 60%),
    linear-gradient(-45deg, transparent 40%, $dark-green 49%, $light-green 50%, $dark-green 51%, transparent 60%);

    animation: animateFlashingXScaleRotate 2000ms forwards,
    animateFlashingXOpacity 1500ms forwards;
  }
}

@keyframes animateFlashingXScaleRotate {
  0% {
    transform: scale(10) rotate(0deg);
  }
  100% {
    transform: scale(0.6) rotate(180deg);
  }
}

@keyframes animateFlashingXOpacity {
  0% {
    opacity: 0;
  }
  50% {
    opacity: 1;
  }
  100% {
    opacity: 0;
  }
}

@keyframes animateOpacity {
  0% {
    opacity: 0
  }
  50% {
    opacity: 1
  }
  100% {
    opacity: 0
  }
}

@keyframes animateJump {
  0% {
    transform: translateY(0px) scale(1);
  }
  7% {
    transform: translateY(-7px) scale(1.1)
  }
  14% {
    transform: translateY(0px) scale(1)
  }
}


//SurfaceTypeEnum
.DEEP_SPACE {
  background-image: url('../../assets/texture_space.png');
  background-size: cover;
  background-color: #050405;
}

.DIRT {
  background-image: url('../../assets/texture_asteroid.png');
  background-size: cover;
  background-color: #919191;
}

.AIR {
  background-image: url('../../assets/texture_rock.png');
  background-size: cover;
  background-color: #2f2f2f;
}

.DEEP_SPACE0 {
  @extend .DEEP_SPACE;
  transform: rotate(0deg);
}

.DEEP_SPACE1 {
  @extend .DEEP_SPACE;
  transform: rotate(90deg);
}

.DEEP_SPACE2 {
  @extend .DEEP_SPACE;
  transform: rotate(180deg);
}

.DEEP_SPACE3 {
  @extend .DEEP_SPACE;
  transform: rotate(270deg);
}

.DIRT0 {
  @extend .DIRT;
  transform: rotate(0deg);
}

.DIRT1 {
  @extend .DIRT;
  transform: rotate(90deg);
}

.DIRT2 {
  @extend .DIRT;
  transform: rotate(180deg);
}

.DIRT3 {
  @extend .DIRT;
  transform: rotate(270deg);
}

.AIR0 {
  @extend .AIR;
  transform: rotate(0deg);
}

.AIR1 {
  @extend .AIR;
  transform: rotate(90deg);
}

.AIR2 {
  @extend .AIR;
  transform: rotate(180deg);
}

.AIR3 {
  @extend .AIR;
  transform: rotate(270deg);
}
